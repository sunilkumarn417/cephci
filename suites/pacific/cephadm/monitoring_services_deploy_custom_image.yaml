tests:
  - test:
      name: Install ceph pre-requisites
      desc: installation of ceph pre-requisites
      module: install_prereq.py
      abort-on-fail: true
  - test:
      name: Cephadm Bootstrap with skip-monitoring-stack
      desc: cephadm bootstrap with skip-monitoring-stack
      module: test_bootstrap.py
      polarion-id:
      config:
        command: bootstrap
        base_cmd_args:
          verbose: true
        args:
          registry-json: registry.redhat.io
          custom_image: true
          mon-ip: node1
          fsid: f64f341c-655d-11eb-8778-fa163e914bcc
          skip-monitoring-stack: true
      destroy-cluster: false
      abort-on-fail: true
  - test:
      name: Add Host, Service(s) deployment
      desc: Host and service(s) deployment.
      module: test_cephadm.py
      polarion-id:
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: add_hosts
              service: host
              args:
                nodes: []
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mon
              args:
                placement:
                  nodes:
                    - node1
                    - node2
                    - node3
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: mds
              base_cmd_args:
                verbose: true
              pos_args:
                - cephfs                        # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node3
          - config:
              command: apply
              service: rgw
              base_cmd_args:
                verbose: true
              pos_args:
                - myrgw
              args:
                placement:
                  label: rgw
          - config:
              command: apply
              service: grafana
              custom_image: registry.redhat.io/rhceph-alpha/rhceph-5-dashboard-rhel8:latest
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes:
                    - node1
                  limit: 1
                  sep: ";"
          - config:
              command: apply
              service: prometheus
              custom_image: registry.redhat.io/openshift4/ose-prometheus:v4.6
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes:
                    - node1
                  limit: 1
                  sep: ";"
          - config:
              command: apply
              service: alertmanager
              custom_image: registry.redhat.io/openshift4/ose-prometheus-alertmanager:v4.5
              args:
                placement:
                  label: alertmanager
          - config:
              command: apply
              service: node-exporter
              custom_image: registry.redhat.io/openshift4/ose-prometheus-node-exporter:v4.5
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes: "*"
          - config:
              command: apply
              service: crash
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes: "*"
      destroy-cluster: false
      abort-on-fail: true
  - test:
      name: Configure client
      desc: Configure client on node4
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node4                       # client node
        install_packages:
          - ceph-common                   # install ceph common packages
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"
      destroy-cluster: false
      abort-on-fail: true
